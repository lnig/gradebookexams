"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const auth_js_1 = require("../modules/auth.js");
const lessonsValidation_js_1 = require("../validations/lessonsValidation.js");
const lessons_js_1 = require("../handlers/lessons.js");
const middleware_js_1 = require("../modules/middleware.js");
const userTypes_js_1 = require("../enums/userTypes.js");
const lessonsRouter = (0, express_1.Router)();
lessonsRouter.post('', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator]), (0, lessonsValidation_js_1.validateCreateLessons)(), middleware_js_1.handleInputErrors, lessons_js_1.createLessons);
lessonsRouter.get('', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator]), lessons_js_1.getAllLessons);
lessonsRouter.get('/back/:userId', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator, userTypes_js_1.UserType.Teacher, userTypes_js_1.UserType.Parent, userTypes_js_1.UserType.Student]), (0, lessonsValidation_js_1.validateUserId)(), middleware_js_1.handleInputErrors, lessons_js_1.getLessonsThreeDaysBack);
lessonsRouter.get('/ahead/:userId', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator, userTypes_js_1.UserType.Teacher, userTypes_js_1.UserType.Parent, userTypes_js_1.UserType.Student]), (0, lessonsValidation_js_1.validateUserId)(), middleware_js_1.handleInputErrors, lessons_js_1.getLessonsThreeDaysAhead);
lessonsRouter.get('/today/:userId', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator, userTypes_js_1.UserType.Teacher, userTypes_js_1.UserType.Parent, userTypes_js_1.UserType.Student]), (0, lessonsValidation_js_1.validateUserId)(), middleware_js_1.handleInputErrors, lessons_js_1.getLessonsToday);
lessonsRouter.get('/class/:classId', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator, userTypes_js_1.UserType.Teacher, userTypes_js_1.UserType.Parent, userTypes_js_1.UserType.Student]), (0, lessonsValidation_js_1.validateClassId)(), middleware_js_1.handleInputErrors, lessons_js_1.getLessonsByClassId);
lessonsRouter.get('/user/:userId', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator, userTypes_js_1.UserType.Teacher, userTypes_js_1.UserType.Parent, userTypes_js_1.UserType.Student]), (0, lessonsValidation_js_1.validateUserId)(), middleware_js_1.handleInputErrors, lessons_js_1.getLessonsForUser);
lessonsRouter.get('/:classId/:subjectId', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator, userTypes_js_1.UserType.Teacher, userTypes_js_1.UserType.Parent, userTypes_js_1.UserType.Student]), (0, lessonsValidation_js_1.validateClassAndSubjectIds)(), middleware_js_1.handleInputErrors, lessons_js_1.getLessons);
lessonsRouter.patch('/:lessonId', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator, userTypes_js_1.UserType.Teacher]), (0, lessonsValidation_js_1.validateUpdateLesson)(), middleware_js_1.handleInputErrors, lessons_js_1.updateLesson);
lessonsRouter.delete('/class/:classId/subject/:subjectId', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator, userTypes_js_1.UserType.Teacher]), (0, lessonsValidation_js_1.validateClassAndSubjectIds)(), middleware_js_1.handleInputErrors, lessons_js_1.deleteLessonsByClassAndSubjectIds);
lessonsRouter.delete('/class/:classId/date/:date', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator, userTypes_js_1.UserType.Teacher]), (0, lessonsValidation_js_1.validateDeleteLessonsByClassIdAndDate)(), middleware_js_1.handleInputErrors, lessons_js_1.deleteLessonsByClassIdAndDate);
lessonsRouter.delete('/:lessonId', auth_js_1.authenticate, (0, auth_js_1.authorize)([userTypes_js_1.UserType.Administrator, userTypes_js_1.UserType.Teacher]), (0, lessonsValidation_js_1.validateDeleteLesson)(), middleware_js_1.handleInputErrors, lessons_js_1.deleteLesson);
exports.default = lessonsRouter;
