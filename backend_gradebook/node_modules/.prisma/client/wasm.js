
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.2.0
 * Query Engine version: 4123509d24aa4dede1e864b46351bf2790323b69
 */
Prisma.prismaVersion = {
  client: "6.2.0",
  engine: "4123509d24aa4dede1e864b46351bf2790323b69"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AttendancesScalarFieldEnum = {
  id: 'id',
  date_time: 'date_time',
  was_present: 'was_present',
  was_late: 'was_late',
  was_excused: 'was_excused',
  student_id: 'student_id',
  lesson_id: 'lesson_id'
};

exports.Prisma.BadgesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  category_id: 'category_id'
};

exports.Prisma.Badges_categoriesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Badges_historyScalarFieldEnum = {
  id: 'id',
  date_awarded: 'date_awarded',
  student_id: 'student_id',
  badge_id: 'badge_id'
};

exports.Prisma.ClassesScalarFieldEnum = {
  id: 'id',
  class_name_id: 'class_name_id',
  school_year_id: 'school_year_id',
  teacher_id: 'teacher_id'
};

exports.Prisma.Event_typesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Grades_gradebookScalarFieldEnum = {
  id: 'id',
  description: 'description',
  grade: 'grade',
  weight: 'weight',
  date_given: 'date_given',
  student_id: 'student_id',
  subject_id: 'subject_id',
  teacher_id: 'teacher_id'
};

exports.Prisma.HomeworksScalarFieldEnum = {
  id: 'id',
  description: 'description',
  deadline: 'deadline',
  lesson_id: 'lesson_id'
};

exports.Prisma.LessonsScalarFieldEnum = {
  id: 'id',
  description: 'description',
  date: 'date',
  start_time: 'start_time',
  end_time: 'end_time',
  teacher_id: 'teacher_id',
  class_id: 'class_id',
  subject_id: 'subject_id'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  subject: 'subject',
  content: 'content',
  date_time: 'date_time',
  was_read: 'was_read',
  sender_id: 'sender_id',
  sender_type_id: 'sender_type_id',
  receiver_id: 'receiver_id',
  receiver_type_id: 'receiver_type_id'
};

exports.Prisma.ParentsScalarFieldEnum = {
  id: 'id',
  pesel: 'pesel',
  email: 'email',
  phone_number: 'phone_number',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  reset_password_token: 'reset_password_token',
  reset_password_expires: 'reset_password_expires'
};

exports.Prisma.Problem_typesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Problems_gradebookScalarFieldEnum = {
  id: 'id',
  description: 'description',
  reported_time: 'reported_time',
  problem_type_id: 'problem_type_id',
  reporter_id: 'reporter_id',
  user_type_id: 'user_type_id',
  status_id: 'status_id'
};

exports.Prisma.School_eventsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  location: 'location',
  description: 'description',
  date: 'date',
  start_time: 'start_time',
  end_time: 'end_time',
  event_type_id: 'event_type_id'
};

exports.Prisma.StatusesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.StudentsScalarFieldEnum = {
  id: 'id',
  pesel: 'pesel',
  email: 'email',
  phone_number: 'phone_number',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  reset_password_token: 'reset_password_token',
  reset_password_expires: 'reset_password_expires',
  class_id: 'class_id'
};

exports.Prisma.Students_parentsScalarFieldEnum = {
  student_id: 'student_id',
  parent_id: 'parent_id'
};

exports.Prisma.SubjectsScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SurveysScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  start_time: 'start_time',
  end_time: 'end_time'
};

exports.Prisma.TeachersScalarFieldEnum = {
  id: 'id',
  pesel: 'pesel',
  email: 'email',
  phone_number: 'phone_number',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  reset_password_token: 'reset_password_token',
  reset_password_expires: 'reset_password_expires'
};

exports.Prisma.Teachers_subjectsScalarFieldEnum = {
  teacher_id: 'teacher_id',
  subject_id: 'subject_id'
};

exports.Prisma.UpdatesScalarFieldEnum = {
  id: 'id',
  description: 'description',
  version: 'version',
  release_time: 'release_time'
};

exports.Prisma.AdministratorsScalarFieldEnum = {
  id: 'id',
  pesel: 'pesel',
  email: 'email',
  phone_number: 'phone_number',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  reset_password_token: 'reset_password_token',
  reset_password_expires: 'reset_password_expires'
};

exports.Prisma.User_typesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.School_yearsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  start_date: 'start_date',
  end_date: 'end_date'
};

exports.Prisma.SemestersScalarFieldEnum = {
  id: 'id',
  semester: 'semester',
  start_date: 'start_date',
  end_date: 'end_date',
  school_year_id: 'school_year_id'
};

exports.Prisma.Class_namesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ExamsScalarFieldEnum = {
  id: 'id',
  lesson_id: 'lesson_id',
  title: 'title',
  topic: 'topic',
  scope: 'scope',
  start_date_time: 'start_date_time',
  end_date_time: 'end_date_time',
  visibility: 'visibility',
  number_of_questions: 'number_of_questions',
  duration: 'duration',
  teacher_id: 'teacher_id',
  description: 'description',
  number_of_tries: 'number_of_tries',
  multiple_tries: 'multiple_tries',
  time_limit_for_each_question: 'time_limit_for_each_question',
  randomise_questions: 'randomise_questions',
  end_test_after_leaving_window: 'end_test_after_leaving_window',
  block_copying_pasting: 'block_copying_pasting',
  randomise_answers: 'randomise_answers',
  latest_attempt_counts: 'latest_attempt_counts',
  best_attempt_counts: 'best_attempt_counts',
  hide_results: 'hide_results',
  display_points_per_question: 'display_points_per_question',
  show_correct_answers: 'show_correct_answers',
  allow_navigation: 'allow_navigation',
  allow_review: 'allow_review'
};

exports.Prisma.Final_gradesScalarFieldEnum = {
  id: 'id',
  grade: 'grade',
  student_id: 'student_id',
  subject_id: 'subject_id',
  teacher_id: 'teacher_id',
  semester_id: 'semester_id'
};

exports.Prisma.QuestionsScalarFieldEnum = {
  id: 'id',
  content: 'content',
  survey_id: 'survey_id',
  question_type_id: 'question_type_id'
};

exports.Prisma.Questions_possible_responsesScalarFieldEnum = {
  id: 'id',
  content: 'content',
  question_id: 'question_id'
};

exports.Prisma.Questions_responsesScalarFieldEnum = {
  id: 'id',
  content: 'content',
  student_id: 'student_id',
  question_id: 'question_id'
};

exports.Prisma.Questions_typesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Attempt_questionsScalarFieldEnum = {
  id: 'id',
  attempt_id: 'attempt_id',
  open_question_id: 'open_question_id',
  closed_question_id: 'closed_question_id',
  question_type: 'question_type',
  created_at: 'created_at'
};

exports.Prisma.AttemptsScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  exam_id: 'exam_id',
  attempt_number: 'attempt_number',
  total_score: 'total_score',
  max_score: 'max_score',
  graded: 'graded',
  start_time: 'start_time',
  end_time: 'end_time'
};

exports.Prisma.Classes_examsScalarFieldEnum = {
  class_id: 'class_id',
  exam_id: 'exam_id'
};

exports.Prisma.Closed_answersScalarFieldEnum = {
  id: 'id',
  closed_question_id: 'closed_question_id',
  is_correct: 'is_correct',
  description: 'description'
};

exports.Prisma.Closed_questionsScalarFieldEnum = {
  id: 'id',
  exam_id: 'exam_id',
  score: 'score',
  is_multiple: 'is_multiple',
  description: 'description'
};

exports.Prisma.Files_repositoryScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  file: 'file',
  exam_id: 'exam_id'
};

exports.Prisma.Gradebook_examsScalarFieldEnum = {
  id: 'id',
  topic: 'topic',
  scope: 'scope',
  lesson_id: 'lesson_id'
};

exports.Prisma.Grades_examsScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  attempt_id: 'attempt_id',
  exam_id: 'exam_id',
  description: 'description',
  grade: 'grade',
  date_given: 'date_given'
};

exports.Prisma.Grading_scaleScalarFieldEnum = {
  id: 'id',
  min_score: 'min_score',
  max_score: 'max_score',
  grades: 'grades'
};

exports.Prisma.NotificationsScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  description: 'description',
  notification_date: 'notification_date',
  is_read: 'is_read',
  exam_id: 'exam_id'
};

exports.Prisma.Open_answersScalarFieldEnum = {
  id: 'id',
  open_question_id: 'open_question_id',
  description: 'description'
};

exports.Prisma.Open_questionsScalarFieldEnum = {
  id: 'id',
  exam_id: 'exam_id',
  auto_check: 'auto_check',
  description: 'description',
  score: 'score'
};

exports.Prisma.Student_closed_answersScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  closed_question_id: 'closed_question_id',
  closed_answer_id: 'closed_answer_id',
  attempt_id: 'attempt_id',
  correctness: 'correctness',
  date_time: 'date_time'
};

exports.Prisma.Student_open_answersScalarFieldEnum = {
  id: 'id',
  open_question_id: 'open_question_id',
  score: 'score',
  student_id: 'student_id',
  attempt_id: 'attempt_id',
  date_time: 'date_time',
  description: 'description'
};

exports.Prisma.Students_examsScalarFieldEnum = {
  students_id: 'students_id',
  exam_id: 'exam_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.badgesOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.badges_categoriesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.event_typesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.grades_gradebookOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.homeworksOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.lessonsOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.messagesOrderByRelevanceFieldEnum = {
  subject: 'subject',
  content: 'content'
};

exports.Prisma.parentsOrderByRelevanceFieldEnum = {
  pesel: 'pesel',
  email: 'email',
  phone_number: 'phone_number',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  reset_password_token: 'reset_password_token'
};

exports.Prisma.problem_typesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.problems_gradebookOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.school_eventsOrderByRelevanceFieldEnum = {
  name: 'name',
  location: 'location',
  description: 'description'
};

exports.Prisma.statusesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.studentsOrderByRelevanceFieldEnum = {
  pesel: 'pesel',
  email: 'email',
  phone_number: 'phone_number',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  reset_password_token: 'reset_password_token'
};

exports.Prisma.subjectsOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.surveysOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.teachersOrderByRelevanceFieldEnum = {
  pesel: 'pesel',
  email: 'email',
  phone_number: 'phone_number',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  reset_password_token: 'reset_password_token'
};

exports.Prisma.updatesOrderByRelevanceFieldEnum = {
  description: 'description',
  version: 'version'
};

exports.Prisma.administratorsOrderByRelevanceFieldEnum = {
  pesel: 'pesel',
  email: 'email',
  phone_number: 'phone_number',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  reset_password_token: 'reset_password_token'
};

exports.Prisma.user_typesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.school_yearsOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.class_namesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.examsOrderByRelevanceFieldEnum = {
  title: 'title',
  topic: 'topic',
  scope: 'scope',
  description: 'description'
};

exports.Prisma.questionsOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.questions_possible_responsesOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.questions_responsesOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.questions_typesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.closed_answersOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.closed_questionsOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.files_repositoryOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description'
};

exports.Prisma.gradebook_examsOrderByRelevanceFieldEnum = {
  topic: 'topic',
  scope: 'scope'
};

exports.Prisma.grades_examsOrderByRelevanceFieldEnum = {
  description: 'description',
  grade: 'grade'
};

exports.Prisma.grading_scaleOrderByRelevanceFieldEnum = {
  grades: 'grades'
};

exports.Prisma.notificationsOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.open_answersOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.open_questionsOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.student_open_answersOrderByRelevanceFieldEnum = {
  description: 'description'
};
exports.attempt_questions_question_type = exports.$Enums.attempt_questions_question_type = {
  OPEN: 'OPEN',
  CLOSED: 'CLOSED'
};

exports.Prisma.ModelName = {
  attendances: 'attendances',
  badges: 'badges',
  badges_categories: 'badges_categories',
  badges_history: 'badges_history',
  classes: 'classes',
  event_types: 'event_types',
  grades_gradebook: 'grades_gradebook',
  homeworks: 'homeworks',
  lessons: 'lessons',
  messages: 'messages',
  parents: 'parents',
  problem_types: 'problem_types',
  problems_gradebook: 'problems_gradebook',
  school_events: 'school_events',
  statuses: 'statuses',
  students: 'students',
  students_parents: 'students_parents',
  subjects: 'subjects',
  surveys: 'surveys',
  teachers: 'teachers',
  teachers_subjects: 'teachers_subjects',
  updates: 'updates',
  administrators: 'administrators',
  user_types: 'user_types',
  school_years: 'school_years',
  semesters: 'semesters',
  class_names: 'class_names',
  exams: 'exams',
  final_grades: 'final_grades',
  questions: 'questions',
  questions_possible_responses: 'questions_possible_responses',
  questions_responses: 'questions_responses',
  questions_types: 'questions_types',
  attempt_questions: 'attempt_questions',
  attempts: 'attempts',
  classes_exams: 'classes_exams',
  closed_answers: 'closed_answers',
  closed_questions: 'closed_questions',
  files_repository: 'files_repository',
  gradebook_exams: 'gradebook_exams',
  grades_exams: 'grades_exams',
  grading_scale: 'grading_scale',
  notifications: 'notifications',
  open_answers: 'open_answers',
  open_questions: 'open_questions',
  student_closed_answers: 'student_closed_answers',
  student_open_answers: 'student_open_answers',
  students_exams: 'students_exams'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
